#!/bin/bash
# Copyright(c) 2015-2016, Intel Corporation
#
# Redistribution  and  use  in source  and  binary  forms,  with  or  without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of  source code  must retain the  above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name  of Intel Corporation  nor the names of its contributors
#   may be used to  endorse or promote  products derived  from this  software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT LIMITED TO,  THE
# IMPLIED WARRANTIES OF  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT  SHALL THE COPYRIGHT OWNER  OR CONTRIBUTORS BE
# LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR
# CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT LIMITED  TO,  PROCUREMENT  OF
# SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA, OR PROFITS;  OR BUSINESS
# INTERRUPTION)  HOWEVER CAUSED  AND ON ANY THEORY  OF LIABILITY,  WHETHER IN
# CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#****************************************************************************
# @file aalinfo
# @brief Script to print out relevant system configuration details related to
#        AAL.
# @ingroup
# @verbatim
# Accelerator Abstraction Layer Sample Application
#
#    This application is for example purposes only.
#    It is not intended to represent a model for developing commercially-deployable applications.
#    It is designed to show working examples of the AAL programming model and APIs.
#
# AUTHORS: Enno Luebbers, Intel Corporation
#
# HISTORY:
# WHEN:          WHO:     WHAT:
# 8/04/2016      EL       Initial version.
#****************************************************************************

PEEK="./pcipeek.py"

# Find PF device

# Try 8086:bcbd
if lspci | grep "Intel.*bcbd"; then
   BDF=$(lspci | grep "Intel.*bcbd" | sed "s/\([0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}\.[0-9a-fA-F]\).*/\1/")
   echo "Found BDX-P PF device at ${BDF}"

# Try 8086:bcc0
elif lspci | grep "Intel.*bcc0"; then
   BDF=$(lspci | grep "Intel.*bcc0" | sed "s/\([0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}\.[0-9a-fA-F]\).*/\1/")
   echo "Found SKX-P PF device at ${BDF}"
else
   echo "No Xeon+FPGA PF found."
   exit 1
fi

PF_PORT_RES="/sys/bus/pci/devices/0000:${BDF}/resource2"

# read AFU_ID
AFU_ID_L_RAW=$(${PEEK} "${PF_PORT_RES}" 0x40008 | sed "s/0x\([0-9a-fA-F]\{4\}\)\([0-9a-fA-F]\{12\}\)/\1-\2/")
AFU_ID_H_RAW=$(${PEEK} "${PF_PORT_RES}" 0x40010 | sed "s/0x\([0-9a-fA-F]\{8\}\)\([0-9a-fA-F]\{4\}\)\([0-9a-fA-F]\{4\}\)/\1-\2-\3/")

echo "AFU_ID in PF PORT0: ${AFU_ID_H_RAW}-${AFU_ID_L_RAW}"

