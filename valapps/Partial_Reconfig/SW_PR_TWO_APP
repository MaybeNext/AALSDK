#!/bin/bash +x

usage() {
   echo "./SW_PR_TWO_APP <number of socket> <bitstream1> "
}

NumSocket=$1
bs1=$2

echo $SystemConfig $NumSocket
echo $2
echo $3

GetDeviceInformation(){
   CMDRST="$(/usr/sbin/lspci | grep bcc0)"
   DEVINFO1="${CMDRST[0]}"
   DEVINFO2="${CMDRST[1]}"

   echo  $DEVINFO1
   Bus1="${DEVINFO1:0:2}"
   Dev1="${DEVINFO1:3:2}"
   Func1="${DEVINFO1:6:1}"
   Bus2="${DEVINFO1:67:2}"
   Dev2="${DEVINFO1:3:2}"
   Func2="${DEVINFO1:6:1}"
}

GetDeviceInformation
bus1="0x"$Bus1
bus2="0x"$Bus2
func1="0x"$Func1
func2="0x"$Func2
dev1="0x"$Dev1
dev2="0x"$Dev2

cd PR_TwoApp

if [[ $NumSocket -eq 1 ]]; then
   ./pr_script $bs1 $bus1 $dev1 $func1 

   if [[ $? -eq 0 ]]; then 
      echo "Test PASS on 1 socket system !!!"
      exit 0
   else 
      echo "Test FAILED on 1 socket system !!!"
      exit 1
   fi
fi

if [[ $NumSocket -eq 2 ]]; then
   echo ./pr_script $bs1 $bus1 $dev1 $func1 
   ./pr_script $bs1 $bus1 $dev1 $func1 

   result1=$?
   
   echo ./pr_script $bs1 $bus2 $dev2 $func2 
   ./pr_script $bs1 $bus2 $dev2 $func2 
      
   result2=$?  

   if [[ $result1 -eq 0 && $result2 -eq 0 ]] ; then 
      echo "Test PASS on 2 sockets system !!!"
      exit 0
   else 
      echo "Test FAILED on 2 sockets system !!!"
      exit 1
   fi
fi


